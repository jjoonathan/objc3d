##########################################################################
# Makefile for GLFW on Windows using Borland C++ Builder Compiler 5.x.
#-------------------------------------------------------------------------
# To compile GLFW using this makefile, run:
#  make -f Makefile.win32.bcc
#-------------------------------------------------------------------------
# $Id: Makefile.win32.bcc,v 1.3 2004/04/07 20:58:26 marcus256 Exp $
##########################################################################

##########################################################################
# Default: Build static and dynamic versions of GLFW
##########################################################################
default: glfw.lib glfw.dll


##########################################################################
# GLFW version
##########################################################################
VERMAJOR = 2
VERMINOR = 5


##########################################################################
# Compiler settings
##########################################################################
CC         = bcc32
CFLAGS     = -c -O1 -q -w -I. -I..
CFLAGS_DLL = $(CFLAGS) -DGLFW_BUILD_DLL

# Some modules should be optimized for speed (e.g. image decoding)
CFLAGS_SPEED     = -c -O2 -OS -Ov -q -w -I. -I..
CFLAGS_SPEED_DLL = $(CFLAGS_SPEED) -DGLFW_BUILD_DLL


##########################################################################
# Library builder settings
##########################################################################
# Static library
MKLIB     = tlib
LIBFLAGS  =

# DLL
LINK      = bcc32
LINKFLAGS = -tWD -q -v-
IMPLIB    = implib


##########################################################################
# Object files for static library
##########################################################################
OBJS = \
       enable.obj \
       fullscreen.obj \
       glext.obj \
       image.obj \
       init.obj \
       input.obj \
       joystick.obj \
       tga.obj \
       thread.obj \
       time.obj \
       window.obj \
       win32_enable.obj \
       win32_fullscreen.obj \
       win32_glext.obj \
       win32_init.obj \
       win32_joystick.obj \
       win32_thread.obj \
       win32_time.obj \
       win32_window.obj

OBJS2 = \
       +enable.obj \
       +fullscreen.obj \
       +glext.obj \
       +image.obj \
       +init.obj \
       +input.obj \
       +joystick.obj \
       +tga.obj \
       +thread.obj \
       +time.obj \
       +window.obj \
       +win32_enable.obj \
       +win32_fullscreen.obj \
       +win32_glext.obj \
       +win32_init.obj \
       +win32_joystick.obj \
       +win32_thread.obj \
       +win32_time.obj \
       +win32_window.obj


##########################################################################
# Object files for dynamic library
##########################################################################
DLLOBJS = \
       enable_dll.obj \
       fullscreen_dll.obj \
       glext_dll.obj \
       image_dll.obj \
       init_dll.obj \
       input_dll.obj \
       joystick_dll.obj \
       tga_dll.obj \
       thread_dll.obj \
       time_dll.obj \
       window_dll.obj \
       win32_dllmain_dll.obj \
       win32_enable_dll.obj \
       win32_fullscreen_dll.obj \
       win32_glext_dll.obj \
       win32_init_dll.obj \
       win32_joystick_dll.obj \
       win32_thread_dll.obj \
       win32_time_dll.obj \
       win32_window_dll.obj



##########################################################################
# Rule for building static library
##########################################################################
glfw.lib: $(OBJS)
	$(MKLIB) $(LIBFLAGS) glfw.lib $(OBJS2)


##########################################################################
# Rule for building dynamic library
##########################################################################
glfw.dll: $(DLLOBJS)
	$(LINK) -e$@ $(LINKFLAGS) $(DLLOBJS)
	$(IMPLIB) glfwdll.lib glfwdll.def


##########################################################################
# Rules for building static library object files
##########################################################################
enable.obj: ..\\enable.c ..\\internal.h platform.h
	$(CC) $(CFLAGS) -o$@ ..\\enable.c

fullscreen.obj: ..\\fullscreen.c ..\\internal.h platform.h
	$(CC) $(CFLAGS) -o$@ ..\\fullscreen.c

glext.obj: ..\\glext.c ..\\internal.h platform.h
	$(CC) $(CFLAGS) -o$@ ..\\glext.c

image.obj: ..\\image.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_SPEED) -o$@ ..\\image.c

init.obj: ..\\init.c ..\\internal.h platform.h
	$(CC) $(CFLAGS) -o$@ ..\\init.c

input.obj: ..\\input.c ..\\internal.h platform.h
	$(CC) $(CFLAGS) -o$@ ..\\input.c

joystick.obj: ..\\joystick.c ..\\internal.h platform.h
	$(CC) $(CFLAGS) -o$@ ..\\joystick.c

tga.obj: ..\\tga.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_SPEED) -o$@ ..\\tga.c

thread.obj: ..\\thread.c ..\\internal.h platform.h
	$(CC) $(CFLAGS) -o$@ ..\\thread.c

time.obj: ..\\time.c ..\\internal.h platform.h
	$(CC) $(CFLAGS) -o$@ ..\\time.c

window.obj: ..\\window.c ..\\internal.h platform.h
	$(CC) $(CFLAGS) -o$@ ..\\window.c

win32_enable.obj: win32_enable.c ..\\internal.h platform.h
	$(CC) $(CFLAGS) -o$@ win32_enable.c

win32_fullscreen.obj: win32_fullscreen.c ..\\internal.h platform.h
	$(CC) $(CFLAGS) -o$@ win32_fullscreen.c

win32_glext.obj: win32_glext.c ..\\internal.h platform.h
	$(CC) $(CFLAGS) -o$@ win32_glext.c

win32_init.obj: win32_init.c ..\\internal.h platform.h
	$(CC) $(CFLAGS) -o$@ win32_init.c

win32_joystick.obj: win32_joystick.c ..\\internal.h platform.h
	$(CC) $(CFLAGS) -o$@ win32_joystick.c

win32_thread.obj: win32_thread.c ..\\internal.h platform.h
	$(CC) $(CFLAGS) -o$@ win32_thread.c

win32_time.obj: win32_time.c ..\\internal.h platform.h
	$(CC) $(CFLAGS) -o$@ win32_time.c

win32_window.obj: win32_window.c ..\\internal.h platform.h
	$(CC) $(CFLAGS) -o$@ win32_window.c


##########################################################################
# Rules for building dynamic library object files
##########################################################################
enable_dll.obj: ..\\enable.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) -o$@ ..\\enable.c

fullscreen_dll.obj: ..\\fullscreen.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) -o$@ ..\\fullscreen.c

glext_dll.obj: ..\\glext.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) -o$@ ..\\glext.c

image_dll.obj: ..\\image.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_SPEED_DLL) -o$@ ..\\image.c

init_dll.obj: ..\\init.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) -o$@ ..\\init.c

input_dll.obj: ..\\input.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) -o$@ ..\\input.c

joystick_dll.obj: ..\\joystick.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) -o$@ ..\\joystick.c

tga_dll.obj: ..\\tga.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_SPEED_DLL) -o$@ ..\\tga.c

thread_dll.obj: ..\\thread.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) -o$@ ..\\thread.c

time_dll.obj: ..\\time.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) -o$@ ..\\time.c

window_dll.obj: ..\\window.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) -o$@ ..\\window.c

win32_dllmain_dll.obj: win32_dllmain.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) -o$@ win32_dllmain.c

win32_enable_dll.obj: win32_enable.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) -o$@ win32_enable.c

win32_fullscreen_dll.obj: win32_fullscreen.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) -o$@ win32_fullscreen.c

win32_glext_dll.obj: win32_glext.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) -o$@ win32_glext.c

win32_init_dll.obj: win32_init.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) -o$@ win32_init.c

win32_joystick_dll.obj: win32_joystick.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) -o$@ win32_joystick.c

win32_thread_dll.obj: win32_thread.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) -o$@ win32_thread.c

win32_time_dll.obj: win32_time.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) -o$@ win32_time.c

win32_window_dll.obj: win32_window.c ..\\internal.h platform.h
	$(CC) $(CFLAGS_DLL) -o$@ win32_window.c
